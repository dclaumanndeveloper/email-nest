## Running with Docker

This project includes a Docker setup for easy local development and production deployment. The provided `Dockerfile` and `docker-compose.yml` ensure consistent environments and dependency management.

### Requirements
- **Node.js version:** 22.14.0 (as specified in the Dockerfile)
- **pnpm version:** 10.4.1 (managed via Corepack in the Dockerfile)
- **Docker** and **Docker Compose** installed on your system

### Environment Variables
- The application can be configured using a `.env` file at the project root. Uncomment the `env_file` line in `docker-compose.yml` if you wish to use it for environment variables.

### Build and Run
To build and start the application using Docker Compose:

```bash
$ docker compose up --build
```

This will:
- Build the Docker image using the provided `Dockerfile`
- Install dependencies and build the TypeScript project
- Start the application in a minimal, production-ready container

### Ports
- The application service (`typescript-app`) exposes **port 3000** by default. Access the app at [http://localhost:3000](http://localhost:3000).

### Additional Notes
- The Docker setup uses a multi-stage build for smaller production images and a non-root user for security.
- If you add additional services (e.g., a database), update `docker-compose.yml` accordingly and configure `depends_on` and `networks` as needed.

For any project-specific configuration, refer to the `.env` file and update it as required for your environment.
